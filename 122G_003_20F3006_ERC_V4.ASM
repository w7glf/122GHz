;*******************************************************************************
;********************* 122 GHz Transverter CONTROL PROGRAM *********************
;*******************************************************************************
;******************************** VK3CV / WQ1S *********************************
;*******************************************************************************
;
#DEFINE	VERSION "122G_003_20F3006"	;BAND_PCB REVISION_YY F MM DD
;
;****************************** REVISION HISTORY *******************************
;
;  W7GLF Revision History
;
; My changes all require the flag W7GLF to be set to make them active.
;
; Add a feature to signal when battery voltage goes low when using LiFePO4
;    batteries (the knee is like 12.8 volts rather than NiCad's 9.5 volts)
; Make the low voltage indicator a flashing light rather than simply turning 
;    the LED on.
; Allow one to choose which way they want their LED to light.
; I shortened the time so it beacons the callsign every 5 seconds rather 
;    than every 30 seconds.
;
;REV 20F3006, ADDED MORE RS232 COMMANDS, COMMAND "E" FOR INPUT OF EEPROM PLL 
; VALUES INTO CHANNEL E, 12 HEX INPUT BYTES ARE REQUIRED. 
; COMMAND "C" FOR MORSE BEACON CARRIER DURATION IN approx SECONDS (000H - 0FFH).
; BEACON MORSE STRING CAN NOW BE 24 CHARACTERS LONG , RS232 INPUT BUFFER EXTENDED
; TO 25 CHARACTERS, 1 COMMAND PLUS 24 CHARACTERS.
; CHANGED 10MHz REF DC CONTROL PWM UPDATE RATE FROM 610 Hz TO 9.76 KHz.
;
;REV 19F2611, ADDED EXTERNAL RS232 COMMANDS, "B" SET BEACON STRING AND "T" SET
; REFERANCE TUNE VOLTAGE. MUST BE IN RX MODE TO ENTER RS232 COMMAND MODE. 
; R2232 COMMAND MODE INCLUDES TIME OUT, ERROR TRAPPING, AND COMMAND ABBORT (ESC). 
; CHANGES IN MORSE ROUTINES TO ALLOW UPPPER AND LOWER CASE ASCII CHARACTERS.
; MORSE CHARACTERS "/" AND " " (SPACE) NOW ALSO ALLOWED. 
; MORSE STRING SIZE INCREASED TO 23 CHARACTERS.
; FIXED PROBLEM WITH SETREF ROUTINE CAUSING A GAP IN THE REF ADJUSTMENT RANGE.  
;
;REV 19F0710, ADDED MORE FREQUENCIES, FIXED BUG IN I.S.R. CAUSING LOCKUP DUE TO 
; EEPROM WRITE CONFLICT. RE-ARANGED EEPROM DATA STORAGE AND PLL ROUTINES TO 
; ALLOW FOR MORE VERSATILE PROGRAMMING OF FREQUENCIES. FIXED BUG IN GPS 
; DISCIPLINING ROUTINE CAUSING GAPS AND RESTRICTIONS IN ADJUSTMENT RANGE. 
;
;REV 19F2704 INITIAL RELEASE, NBFM & CW
;
;REV 18F2811 INITIAL RELEASE, WBFM
;
;******************************************************************************
;
; SYNTH FREQUENCY DATA IS STORED IN EEPROM , STARTING AT LOCATION 000H
; 
;**************************** 10MHz EXTERNAL CLOCK *****************************
;
;
		list p=16F877A
;
		include "P16F877A.inc"
;
		ERRORLEVEL 0, -302	;SUPPRESS SFR PAGE SELECT WARNINGS 
;
		__CONFIG 0373AH

; ICD debugger reserved resources
;
; Program memory 01F00H - 01FFFH
;
; RAM GP registers 070H, 0F0H, 0170H, 01E5H - 01F0H  
;
;
;	DEFINITIONS
;				
GR1		EQU	071H		;GL0BAL REGISTERS (EXIST IN ALL BANKS)
GR2		EQU	072H
GR3		EQU	073H
GR4		EQU	074H
MEMPOINT	EQU	075H		;GLOBAL FLASH MEMORY PAGE POINTER
EEPOINT		EQU	076H		;GLOBAL EEPOINT REGISTER
GFLAG		EQU	077H		;GLOBAL FLAG REGISTER
W_TEMP		EQU	078H
STATUS_TEMP	EQU	079H
PCLATH_TEMP	EQU	07AH
;
;
;GFLAG GLOBAL FLAG DEFINITIONS
W7GLF		EQU	1			; Set to 1 for ERC changes
LIFEPO4		EQU	1			; Set lo voltage to 12.8 otherwise 9.5
ERCBLINK	EQU	1			; Blink a lot for low DC
LEDREV		EQU	0			; Set to 1 to reverse RED/GREEN LED
CARRIER_DELAY	EQU 5		; 5 second beacon carrier

TXON		EQU	000H		;0 = NO TX, 1 = TX IS ACTIVE
CWON		EQU	001H		;0 = NO CW KEY, 1 = CW KEY
RXSTAT		EQU	002H		;0 = NOT IN RX STATE , 1 = IN RX STATE
GPS			EQU	003H		;0 = NO GPS DICIPLINING , 1 = GPS ACTIVE
CURS		EQU	004H		;CURSOR TOGGLE FLAG
CORR		EQU	005H		;REF CORRECTION REQUIRED
LOWDC		EQU	006H		;0 = DCin OK , 1 = DCin IS LOW
;BIT7
;
;
R0		EQU	020H		;RAM GENERAL REGISTERS ALL IN BANK 0
R1		EQU	021H
R2		EQU	022H
R3		EQU	023H
R4		EQU	024H
R5		EQU	025H
R6		EQU	026H
R7		EQU	027H
R8		EQU     028H
TEMP		EQU	029H
;
;********** RAM REGISTERS *********** (ALL IN BANK O)
;
COUNT		EQU	02AH		;GENERAL PURPOSE COUNT
SWITCH		EQU	02BH		;CURRENT SWITCH SETTING (CHANNEL NUMBER)
LSWITCH		EQU	02CH		;LAST SWITCH SETTING
REFHV		EQU	02DH		;10MHz REFERANCE DC VOLTAGE HIGH BITS
REFLV		EQU	02EH		;10MHz REFERANCE DC VOLTAGE LOW BITS
VCOHV	 	EQU	02FH		;VCO VOLTAGE HIGH BITS
VCOLV		EQU	030H		;VCO VOLTAGE LOW BITS
DCINHV		EQU	031H		;DC INPUT VOLTAGE HIGH BYTE
DCINLV		EQU	032H		;DC INPUT VOLTAGE LOW BYTE
MORSECH		EQU	033H		;CURRENT MORSE CHARACTER
MORSE1		EQU	034H		;MORSE REGISTER 1
MORSE2		EQU	035H		;MORSE REGISTER 2
MORSE3		EQU	036H		;MORSE REGISTER 3
SYNTHP		EQU	037H		;SYNTHESIZER EEPROM DATA POINTER
RTUNEL		EQU	038H		;REFERANCE TUNE REGISTER 8 BITS (EEPROM ERTUNEL VALUE)
RTUNEH		EQU	039H		;REFERANCE STEER LINE REGISTER (B3 IS STEER LSB HIZ)
RERROR		EQU	03AH		;REFERANCE ERROR VALUE (CCPR1L VALUE AT INTERRUPT)
LASTRERROR	EQU	03BH		;LAST REF ERROR VALUE
NERCOUNT	EQU	03CH		;NO ERROR REF COUNT 
LOOPC		EQU	03DH		;MAIN LOOP COUNTER
COMPOINT	EQU	03EH		;RS232 RX DATA BUFFER POINTER
SERTOC		EQU	03FH		;RS232 RX COMMAND TIME OUT COUNTER
CARDEL		EQU	040H		;CARRIER DELAY REGISTER
;
COMMSBUFF0	EQU	050H		;START OF SERIAL COMMS BUFFER
COMMSBUFFE	EQU	069H		;END OF SERIAL COMMS BUFFER LENGTH = 25 CHAR
;
;
;END OF RAM IS 06FH IN BANK 0 , 070H - 07FH EXISTS IN ALL BANKS (GLOBAL REGS)
;
;
;** FIXED EQUATES **
;
;
;
;************************* COLD BOOT PROGRAM START ****************************
;
;START AT THE RESET VECTOR
		ORG	000H
		NOP
		GOTO	COLD
;
;****************************** INTERRUPT VECTOR ******************************
;INTERRUPT VECTORS TO HERE
;
		ORG	004H
		GOTO	INTSERV		;SERVICE INTERRUPTS
;
;******************************** START OF PROGRAM ****************************
;
COLD		ORG	020H		;START ADDRESS
		NOP
;
;	PORT INITIALIZATION
;
;	PORT A
;
VDC		EQU	000H		;AN0 INPUT ANALOG DC INPUT VOLTAGE 
VCXOTUNE	EQU	001H		;AN1 INPUT ANALOG VCTCXO TUNE VOLTAGE
GPSRXD		EQU	002H		;OUTPUT DIGITAL GPS RXD
VPLL		EQU	003H		;AN3 INPUT ANALOG PLL VCO ERROR VOLTAGE 
KEYIN		EQU	004H		;INPUT DIGITAL KEY LINE INPUT
RXEN		EQU	005H		;OUTPUT DIGITAL RF CHIP RX ENABLE
;
		BANKSEL	0
       		CLRF	PORTA		;INITIALIZE PORTS AND DIRECTIONS
;
		MOVLW	089H		;SET UP AD INPUT HERE
		MOVWF	ADCON0		;OSC/32 , AN1 SELECTED
;
		BANKSEL	ADCON1
		MOVLW	004H		;LEFT JUSTIFIED, 3 x ANALOGUE IN , REF VDD & VSS
		MOVWF	ADCON1
;
		MOVLW	B'11011011'	;PORT A DIRECTIONS 
		MOVWF	TRISA		
		BANKSEL	0		;BACK TO REGISTER BANK 0
		MOVLW	B'00000000'     ;PORT A LEVELS
		MOVWF	PORTA		;SET UP INITIAL PORT A LEVELS	
;
;	PORT B
;
GPSTXD		EQU	000H		;INPUT DIGITAL GPS TX DATA
SW1		EQU	001H		;INPUT DIGITAL SWITCH 1
SW2		EQU	002H		;INPUT DIGITAL SWITCH 2
SW4		EQU	003H		;INPUT DIGITAL SWITCH 4
SW8		EQU	004H		;INPUT DIGITAL SWITCH 8
VMIC		EQU	005H		;OUTPUT DIGITAL MIC AMP ENABLE
;ICD		EQU	006H		;RESERVED FOR ICD
;ICD		EQU	007H		;RESERVED FOR ICD
;
		CLRF	PORTB
		BANKSEL	TRISB
		MOVLW	B'11011111'     ;PORT B DIRECTIONS
		MOVWF	TRISB		
		BCF	OPTION_REG,7	;ENABLE PORT B WEAK PULLUPS
       		BANKSEL	0
		MOVLW	B'00000000'     ;PORT B INITIAL LEVELS
		MOVWF	PORTB		
;
;	PORT C	
;
RFLE		EQU	000H		;OUTPUT DIGITAL PLL SPI CHIP LATCH ENABLE
PWM		EQU	001H		;OUTPUT DIGITAL PWM REF STEERING
PPS		EQU	002H		;INPUT DIGITAL 1PPS
RFCLK		EQU	003H		;OUTPUT DIGITAL PLL SPI CLOCK (LED1)
RFMUX		EQU	004H		;INPUT DIGITAL PLL MUX
RFDATA		EQU	005H		;OUTPUT DIGITAL PLL SPI DATA (LED2)
TXD		EQU	006H		;OUTPUT RS232 TX DATA
RXD		EQU	007H		;INPUT RS232 RX DATA
;
;
 		CLRF	PORTC
		BANKSEL	TRISC
		MOVLW	B'10010100'     ;PORT C DIRECTIONS 
		MOVWF	TRISC		
       	 	BANKSEL	0
		MOVLW	B'00001000'     ;PORT C INITIAL LEVELS (LED ON)
		MOVWF	PORTC		
;
;	PORT D
;
VT1		EQU	000H		;OUTPUT DIGITAL RF TUNE 1
VT2		EQU	001H		;OUTPUT DIGITAL RF TUNE 2
VT3		EQU	002H		;OUTPUT DIGITAL RF TUNE 3
FSK		EQU	003H		;OUTPUT DIGITAL FSK 
PTTIN		EQU	004H		;INPUT DIGITAL PTT INPUT
PTTOUT		EQU	005H		;OUTPUT DIGITAL PTT OUTPUT
SIDETONE	EQU	006H		;OUTPUT DIGITAL AUDIO SIDETONE
KEYOUT		EQU	007H		;OUTPUT DIGITAL KEY OUT
;
		CLRF	PORTD
		BANKSEL	TRISD
		MOVLW	B'00011000'	;PORT D DIRECTIONS 
       	 	MOVWF	TRISD
		BANKSEL	0
		MOVLW	B'00000011'	;PORT D INITIAL LEVELS (VCO STEER LINES)
		MOVWF	PORTD
;
;	PORT E
;
STEER0		EQU	000H		;OUTPUT DIGITAL REF STEER 0
STEER1		EQU	001H    	;OUTPUT DIGITAL REF STEER 1
STEER2		EQU	002H    	;OUTPUT DIGITAL REF STEER 2
;
		CLRF	PORTE
		BANKSEL	TRISE
		MOVLW	B'00000000'	;(000)PORT E DIRECTIONS
		MOVWF	TRISE           
		BANKSEL	0
		MOVLW	B'00000011'	;PORT E INITIAL LEVELS
		MOVWF	PORTE
;
;
;	COMMS PORT CONFIG
;
		BANKSEL	TXSTA
		MOVLW	B'00100110'	;TX MODE: 8 BITS, ASYNC, HIGH SPEED
		MOVWF	TXSTA		;SET MODE
		BANKSEL	RCSTA
		MOVLW	B'10010000'	;RX MODE 8 BITS, ASYNC, RX ENABLED
		MOVWF	RCSTA		;SET MODE
		MOVLW	D'64'		;SET BAUD RATE 	9600 Bd D64
					;	       56000 Bd D10
		BANKSEL	SPBRG
		MOVWF	SPBRG		;LOAD BAUD RATE
;
;
;	TIMER 2 SET UP AS SOURCE FOR PWM
;
		BANKSEL	PR2
		MOVLW	0FFH		;(0FFH)TIMER 2 LOAD VALUE
		MOVWF	PR2
		BANKSEL	T2CON
		MOVLW	B'00000100'   	;PRE SCALE = 1 , RUN TIMER 2
		MOVWF	T2CON		;UPDATE 9.76 KHz , WAS 00000110, 1/16 PRE SCALE = 610 HZ UPDATE
		BANKSEL	0
;
;
;	PWM REFERANCE AND STEERING OUTPUT CONFIG
;
VREFSET		CALL	SETREF		;SET INITIAL PWM REFERANCE CONTROL VALUES TO EEPROM STORED VALUES
;					;STEER LINES ALSO UPDATED IF REQUIRED
		MOVLW	010H
		MOVWF	LASTRERROR	;INITIALIZE LAST ERROR VALUE TO DUMMY MID RANGE
		MOVLW	0FFH
		MOVWF	NERCOUNT	;INITIALIZE NO ERROR COUNT
;
;	TIMER 1 SET UP FOR 1PPS CAPTURE WITH INTERRUPTS
;
		MOVLW	B'00000001'	;SET UP TIMER 1, NO PRE SCALE, Fosc/4, ENABLE TIMER 1
		BANKSEL	T1CON
		MOVWF	T1CON
;
		BANKSEL	CCP1CON
		MOVLW	B'00000100'	;SET UP CAPTURE COMPARE 1 INPUT, FALLING EDGE, SOURCE TIMER 1
		MOVWF	CCP1CON				
		BANKSEL	0
;
;
;******************** START OF MAIN PROGRAM *************************
START		NOP
		CLRF	GFLAG		;CLEAR FLAG REGISTER, NO TX , NO CW KEY, NO RX STATE
		CLRF	LOOPC		;CLEAR LOOP COUNTER
		CALL	LEDRED
		CALL	WAITONE
		CALL	WAITONE
;
		CALL	LBEEP
		MOVLW	LOW SYNTHINIT	;POINT TO START OF SYNTH DATA TABLE INITIALIZATION VALUES
		MOVWF	SYNTHP		;LOAD POINTER
		CALL	SYNTHREG	;LOAD FIRST REGISTER (R0)
		CALL	SYNTHREG	;LOAD SECOND REGISTER (R1)
		CALL	SYNTHREG	;R2
		CALL	SYNTHREG	;R3
;
		CALL	WAITONE
		CALL	GETSWITCH	;GET SWITCH SETTING FOR SYNTHRX
		CALL	SYNTHRX		;MAKE SURE EVERYTHING IS STABLE AFTER POWER ON
		CALL	WAITONE
;
		CALL	PRBOOT		;PRINT BOOT UP STRING
;
		BANKSEL	PIR1		;CLEAR ALL INTERRUPT FLAGS AND ENABLE INTERRUPTS
		CLRF	PIR1	
		BANKSEL	PIE1
		CLRF	PIE1
		BSF	PIE1,CCP1IE	;ENABLE CCP1 INT
		BANKSEL	0
		BSF	INTCON,PEIE	;ENABLE PERIPHERAL INTERRUPTS
		BSF	INTCON,GIE	;ALL GOOD TO GO
;
;
;************************** MAIN PROGRAM LOOP *********************************
;
MAIN		INCF	LOOPC,F		;INCREMENT MAIN LOOP COUNTER EACH TIME 
		BTFSS	PORTC,RFMUX	;CHECK IF PLL LOCKED		
		CALL	PLLERR
		BTFSS	PORTD,PTTIN	;CHECK IF TX REQUESTED
		GOTO	MAYBTXAU
		BTFSS	PORTA,KEYIN	;CHECK IF CW REQUESTED
		GOTO	CWKEY		;MUST BE CW TX
;
RXACTIVE	BTFSS	GFLAG,RXSTAT	;CHECK IF FIRST TIME THROUGH
		CALL	SYNTHRX		;PROGRAM SYNTH IF FIRST TIME HERE
		CALL	LEDGRN		;PUT GREEN LED ON
		BSF	GFLAG,RXSTAT	;SHOW RX STATE
		BCF	GFLAG,TXON	;NO TX ACTIVITY SO CLEAR FLAGS
		BCF	GFLAG,CWON
		BCF	PORTD,PTTOUT	;RESET OUTPUT LINES
		BCF	PORTD,KEYOUT
		BCF	PORTB,VMIC	;TURN OFF MIC AMP
		BCF	PORTB,VMIC
		BCF	PORTA,RXEN	;ENABLE RX
		GOTO	CHKCH		;CONTINUE LOOP
;
MAYBTXAU	BCF	GFLAG,RXSTAT	;SHOW NOT IN RX STATE
		BTFSS	PORTA,KEYIN	;MAYBE AUDIO SO CHECK IF KEY ALSO
		GOTO	BEACONFM	;BOTH SO BEACON MODE
;
;TX FM AUDIO MODE
;
		BCF	GFLAG,CWON	;AUDIO TX STATE SO CLEAR CW FLAG	
		BCF	GFLAG,RXSTAT	;SHOW NOT RX STATE
		BCF	PORTA,RXEN	;ALWAYS ENABLE RX
		BTFSC	GFLAG,TXON	;CHECK IF FIRST TIME		
		GOTO	TXSLOP		;TX ALREADY ON SO CONTINUE
		BSF	GFLAG,TXON	;FIRST TIME THROUGH SO PROG SYNTH
		CALL	SYNTHRX
;
TXSLOP		BSF	PORTD,PTTOUT	;ASSERT PTT OUTPUT
		BSF	PORTB,VMIC	;TURN ON MIC AMP
		BSF	PORTB,VMIC
		CALL	LEDRED		;PUT RED LED ON
		GOTO	CHKCH		;CONTINUE LOOP
;
BEACONFM	BTFSC	PORTB,SW1	;CHECK IF CW BEACON OR FM BEACON MODE
		GOTO	BEACONCW	;DETERMINED BY STATE OF A/B CHANNEL SWITCH
		BCF	PORTB,VMIC
		BCF	PORTB,VMIC	;MAKE SURE MIC IS OFF
		CALL	MORSEIDENT	;SEND MORSE IDENT
		CALL	LEDRED
		CALL	WAIT
		CALL	GETDC		;CHECK DC EVERY LOOP IN THIS MODE
		CALL	CARRIER		;SEND CARRIER BETWEEN IDENTS (JUST A LONG DELAY)
;
		CALL	GETREF		;GET REFERENCE TUNE VOLTAGE
		CALL	GETVCO		;GET VCO TUNE VOLTAGE
		BTFSC	PORTC,7		;CHECK IF RS232 IS CONNECTED
		CALL	PRINTSTAT	;YES SO PRINT STATUS EVERY LOOP
		GOTO	CHKCH		;CONTINUE LOOP
;
BEACONCW	BCF	PORTB,VMIC
		BCF	PORTB,VMIC	;MAKE SURE MIC IS OFF
		CALL	MORSEIDENT	;SEND CW MORSE IDENT
		CALL	WAIT
		CALL	GETDC		;CHECK DC EVERY LOOP IN THIS MODE
		CALL	SYNTHTX		;PUT ON CW CARRIER
		CALL	LEDRED
		CALL	CARRIER		;SEND CARRIER BETWEEN IDENTS (JUST A LONG DELAY)
		CALL	SYNTHRX		;BACK TO RX AFTER CARRIER
		CALL	LEDGRN
		CALL	WAIT
		CALL	WAIT		;SMALL SPACE BEFORE NEXT IDENT 
;
		CALL	GETREF		;GET REFERANCE TUNE VOLTAGE
		CALL	GETVCO		;GET VCO TUNE VOLTAGE
		BTFSC	PORTC,7		;CHECK IF RS232 IS CONNECTED
		CALL	PRINTSTAT	;YES SO PRINT STATUS EVERY LOOP
		GOTO	CHKCH		;CONTINUE LOOP
;
CWKEY		BCF	GFLAG,RXSTAT	;SHOW NOT IN RX STATE
		BCF	GFLAG,TXON	;CW STATE SO CLEAR TX FLAG 
		BCF	GFLAG,RXSTAT	;SHOW NOT RX STATE
		BCF	PORTA,RXEN	;ALWAYS ENABLE RX
;
		BTFSC	PORTB,SW1	;CHECK IF CW OR FM MODE REQUIRED
		GOTO	CWKEYCAR	;GOTO CW CARRIER ONLY MODE

		BTFSC	GFLAG,CWON	;CHECK IF FIRST TIME
		GOTO	CWLOP
		BSF	GFLAG,CWON	;FIRST TIME THROUGH SO PROG SYNTH
		BANKSEL	TRISD
		BCF	TRISD,FSK
		BCF	TRISD,SIDETONE	;LOW Z FSK AND SIDETONE
		BANKSEL	0
		CALL	SYNTHRX		;STAY ON RX FREQ IN THIS MODE
;
CWLOP		BSF	PORTD,KEYOUT	;ASSERT KEY OUTPUT
		CALL	LEDRED
		BTFSS	PORTD,FSK	;TOGGLE FSK AND SIDETONE TO GENERATE CW AUDIO
		GOTO	CWLOPT	
		BCF	PORTD,FSK
		BCF	PORTD,SIDETONE
		GOTO	CWLT
CWLOPT		BSF	PORTD,FSK
		BSF	PORTD,SIDETONE
;
CWLT		BTFSC	PORTA,KEYIN	;CHECK IF STILL KEYED
		GOTO	ENDCW		;STAY IN LOOP UNTIL RELEASED
		BTFSS	PORTD,PTTIN	;CHECK THAT PTT IS NOT ASSERTED
		GOTO	ENDCW		;PTT ASSERTED SO BEACON MODE IS REQUESTED
		CALL	CWTDEL		;CW TONE DELAY ROUTINE	
		GOTO	CWLOP
;
ENDCW		NOP
		BANKSEL	TRISD
		BSF	TRISD,FSK
		BSF	TRISD,SIDETONE	;HI Z FSK AND SIDETONE
		BANKSEL	0
		GOTO	CHKCH
;
CWKEYCAR	BTFSC	GFLAG,CWON	;CHECK IF FIRST TIME
		GOTO	CWLOPCAR
		BSF	GFLAG,CWON	;FIRST TIME THROUGH SO PROG SYNTH
		BANKSEL	TRISD
		BCF	TRISD,SIDETONE	;LOW Z SIDETONE
		BANKSEL	0
		CALL	SYNTHTX		;STAY ON RX FREQ IN THIS MODE
;
CWLOPCAR	BSF	PORTD,KEYOUT	;ASSERT KEY OUTPUT
		CALL	LEDRED
		BTFSS	PORTD,SIDETONE	;TOGGLE SIDETONE TO GENERATE CW AUDIO
		GOTO	CWLOPTCAR	
		BCF	PORTD,SIDETONE
		GOTO	CWLTCAR
CWLOPTCAR	BSF	PORTD,SIDETONE
;
CWLTCAR		BTFSC	PORTA,KEYIN	;CHECK IF STILL KEYED
		GOTO	ENDCWCAR	;STAY IN LOOP UNTIL RELEASED
		BTFSS	PORTD,PTTIN	;CHECK THAT PTT IS NOT ASSERTED
		GOTO	ENDCWCAR	;PTT ASSERTED SO BEACON MODE IS REQUESTED
		CALL	CWTDEL		;CW TONE DELAY ROUTINE	
		GOTO	CWLOPCAR
;
ENDCWCAR	NOP
		BANKSEL	TRISD
		BSF	TRISD,FSK
		BSF	TRISD,SIDETONE	;HI Z FSK AND SIDETONE
		BANKSEL	0
;
CHKCH		CALL	GETSWITCH	;CHECK SWITCH AND CONTINUE LOOP
		MOVFW	LSWITCH
		SUBWF	SWITCH,W
		BTFSC	STATUS,Z	;CHECK FOR CHANNEL CHANGE
		GOTO	NOCH	
		MOVFW	SWITCH
		MOVWF	LSWITCH		;UPDATE LAST SWITCH
		CALL	SYNTHRX		;UPDATE SYNTHESIZER
		CLRF	GFLAG		;CLEAR STATE FLAG TO UPDATE LEDS ETC
;
NOCH		MOVFW	LOOPC		;GET LOOP COUNTER
		ANDLW	B'01111111'	;MASK TO SET RATE
		BTFSS	STATUS,Z
		GOTO	EVERYL		;GET DC EVERY N LOOPS				
		CALL	GETDC
;
EVERYL		CALL	CHKCOMMS	;CHECK IF RS232 COMMAND RECIEVED		

		CALL	GETREF		;GET REFERANCE TUNE VOLTAGE
;		
		CALL	GETVCO		;GET VCO TUNE VOLTAGE
;
		BTFSS	GFLAG,CORR	;CHECK IF REF CORRECTION IS REQUIRED (SET IN ISR)	
		GOTO	KEEPG
;
		BCF	GFLAG,CORR	;CLEAR FLAG
		MOVLW	LOW ERTUNEL
		MOVWF	EEPOINT
		MOVFW	RTUNEL
		CALL	EEWRITE		;UPDATE REF TUNE VOLTAGE
		MOVLW	LOW ERTUNEH
		MOVWF	EEPOINT
		MOVFW	RTUNEH
		CALL	EEWRITE		;UPDATE REF TUNE VOLTAGE
		CALL	SETREF		;UPDATE CONTROL LINES 
;
KEEPG		MOVFW	LOOPC
		BTFSS	STATUS,Z	;PRINT STATUS EVERY 256 TIMES THROUGH MAIN LOOP
		GOTO	MAIN
;
		BTFSC	PORTC,7		;CHECK IF RS232 IS CONNECTED
		CALL	PRINTSTAT	;YES SO PRINT STATUS
		GOTO	MAIN
;
;********************************** READ SWITCH *******************************
;
GETSWITCH	RRF	PORTB,W
		MOVWF	SWITCH
		COMF	SWITCH,W
		ANDLW	B'00001111'	;MASK OFF UNUSED BITS
		MOVWF	SWITCH
		RETURN
;
;
;*********************************** LED CONTROL ******************************
;
;LED TO RED
;
LEDRED
#if W7GLF && LEDREV
		BCF	PORTC,3
		BCF	PORTC,3
		BSF	PORTC,5
		BSF	PORTC,5
#else
		BSF	PORTC,3
		BSF	PORTC,3
		BCF	PORTC,5
		BCF	PORTC,5
#endif
		RETURN
;
;LED TO GREEN
;
LEDGRN
#if W7GLF && LEDREV
		BSF	PORTC,3
		BSF	PORTC,3
		BCF	PORTC,5
		BCF	PORTC,5
#else
		BCF	PORTC,3
		BCF	PORTC,3
		BSF	PORTC,5
		BSF	PORTC,5
#endif
		RETURN
;
;LED OFF
;
LEDOFF		BCF	PORTC,3
		BCF	PORTC,3
		BCF	PORTC,5
		BCF	PORTC,5
		RETURN
;
;***************************** SYNTHESIZER ROUTINES ***************************
;
;PROGRAM SYNTHESIZER
;
SYNTHTX		CALL	SYNTHRL		;SEND R0,R1, TO SYNTH
		MOVLW	006H
		ADDWF	SYNTHP,F	;ADD TX OFFSET	
		CALL	SYNTHREG	;SEND (R2 & R3) TX FREQ DATA TO SYNTH , ALSO INCREMENTS TO NEXT POINTER LOCATION	
		CALL	SYNTHREG
		RETURN
;
SYNTHRX		CALL	SYNTHRL		;SEND R0,R1, TO SYNTH
		CALL	SYNTHREG	;SEND (R2 & R3) RX FREQ DATA TO SYNTH , ALSO INCREMENTS TO NEXT POINTER LOCATION
		CALL	SYNTHREG
		RETURN
;
;LOAD FIRST 2 SYNTH REGISTERS
;
SYNTHRL		MOVLW	LOW SYNTHINIT	;POINT TO START OF SYNTH DATA TABLE
		MOVWF	SYNTHP		;LOAD POINTER
		CALL	SYNTHREG	;LOAD FIRST REGISTER (R0)
		CALL	SYNTHREG	;LOAD SECOND REGISTER (R1)
;		
		MOVLW	LOW FREQ0R	;POINT TO START OF FREQUENCY TABLE DATA 
		MOVWF	SYNTHP		;LOAD POINTER
;
		MOVFW	SWITCH		;GET CHANNEL NUMBER
		MOVWF	R0		;SWITCH TEMP STORE
		BTFSC	STATUS,Z	;CHECK IF CHANNEL 0
		RETURN			;N0 CORRECTION NEEDED
;
		BCF	STATUS,C
		RLF	R0,F		;MULTIPLY X 12 TO GET CHANNEL OFFSET
		BCF	STATUS,C	;(N x 8) + (N x 4)	
		RLF	R0,F
		MOVFW	R0
		MOVWF	R1		;SAVE N X 4 IN R1
		BCF	STATUS,C
		RLF	R0,F
		BCF	STATUS,C
		MOVFW	R0
		ADDWF	R1,W		;RESULT NOW IN W
		ADDWF	SYNTHP,F	;UPDATE POINTER TO CORRECT TABLE POSITION
		RETURN
;
;POWER DOWN SYNTH AND RESET
;
SYNTHOFF	MOVLW	LOW SYNTHDIS	;POINT TO START OF SYNTH DISSABLE TABLE
		MOVWF	SYNTHP		;LOAD POINTER
		CALL	SYNTHREG	;LOAD FIRST REGISTER (R0)
		CALL	SYNTHREG	;LOAD SECOND REGISTER (R1)
		CALL	SYNTHREG	;LOAD THIRD REGISTER (R2)
		CALL	SYNTHREG	;LOAD FOURTH REGISTER (R3)	
		RETURN
;
;SEND SYNTH DATA TO CHIP
;
SYNTHREG	MOVLW	003H		;LOAD EACH SYTHESIZER REGISTER IN TURN WITH 3 BYTES
		MOVWF	R0		;LOAD COUNTER WITH FIRST 6 BYTES OF SYNTH DATA (ALWAYS COMMON)	
		BCF	PORTC,RFLE	;SYNTH LATCH ENABLE LOW TO START	
		BCF	PORTC,RFCLK	;SYNTH CLOCK LOW
		BCF	PORTC,RFCLK	;SYNTH CLOCK LOW
		BCF	PORTC,RFDATA	;SYNTH DATA LOW
		BCF	PORTC,RFDATA	;SYNTH DATA LOW
SYNTHLOP	MOVFW	SYNTHP
		CALL	READEE		;W CONTAINS EEPROM READ ADDRESS ON CALL AND DATA CONTENTS ON RETURN
		CALL	SYNTHSEND	;SEND DATA TO SYNTH
		INCF	SYNTHP,F	;GOTO NEXT EEPROM LOCATION
		DECF	R0,F
		BTFSS	STATUS,Z
		GOTO	SYNTHLOP
		BSF	PORTC,RFLE	;LATCH DATA INTO CHIP
		RETURN
;
SYNTHSEND	MOVWF	R2		;SAVE DATA
		MOVLW	08H		;8 DATA BITS TO SEND
		MOVWF	R1
SYNSELOP	BTFSS	R2,7
		GOTO	SYNDATL
		BSF	PORTC,RFDATA	;SET UP DATA LINE
		BSF	PORTC,RFDATA	;SET UP DATA LINE
		GOTO	SYNDATSE
SYNDATL		BCF	PORTC,RFDATA
		BCF	PORTC,RFDATA
SYNDATSE	NOP
		BSF	PORTC,RFCLK
		BSF	PORTC,RFCLK	;SYNTH CLOCK HIGH
		NOP
		BCF	PORTC,RFCLK	;TOGGLE CLOCK
		BCF	PORTC,RFCLK	;SYNTH CLOCK LOW
		BCF	STATUS,C
		RLF	R2,F		;POINT TO NEXT BIT
		DECF	R1,F
		BTFSS	STATUS,Z
		GOTO	SYNSELOP
		RETURN
;
PLLERR		CALL	SYNTHOFF	;PUT SYNTH OFF
		CLRF	GFLAG		;CLEAR STATE FLAG TO RESET OPERATION ON RETURN
		CALL	LEDRED
		CALL	LBEEP
;
		CALL	LEDOFF
;
		CALL	GETREF		;KEEP VOLTAGES UPDATED IF IN PLL ERROR
		CALL	GETVCO
;
		BTFSC	PORTC,7		;CHECK IF RS232 IS CONNECTED
		CALL	PRINTSTAT	;YES SO PRINT STATUS
;		
		MOVLW	LOW SYNTHINIT	;POINT TO START OF SYNTH DATA TABLE INITIALIZATION VALUES
		MOVWF	SYNTHP		;LOAD POINTER
		CALL	SYNTHREG	;LOAD FIRST REGISTER (R0)
		CALL	SYNTHREG	;LOAD SECOND REGISTER (R1)
		CALL	SYNTHREG	;R2
		CALL	SYNTHREG	;R3
;
		CALL	LBEEP
;		
		RETURN
;
;************************* ADC CONVERTOR ROUTINES *****************************
;
;** GET DC INPUT
;
GETDC		BCF	GFLAG,LOWDC	;CLEAR LOW DC FLAG
		MOVLW	B'10000101'	;SET UP A/D INPUT HERE
		BANKSEL	0
		MOVWF	ADCON0		;OSC/32 , AN0 SELECTED
;
		BSF	STATUS,RP0	;BANK 1
		MOVLW	084H		;RIGHT JUSTIFIED , 3 ANALOGUE IN , REF VDD & VSS
		MOVWF	ADCON1
		BCF	STATUS,RP0	;BANK 0
;
		CALL	ADCWAIT		;WAIT ROUTINE FOR ADC INPUT SETTLE
		BSF	ADCON0,2	;START CONVERSION
;
DCIL		BTFSC	ADCON0,2
		GOTO	DCIL		;LOOP TILL CONVERSION DONE
		MOVFW	ADRESH
		MOVWF	DCINHV		;PUT HIGH RESULT IN REGISTER
		BSF	STATUS,RP0	;BANK1
		MOVFW	ADRESL
		BCF	STATUS,RP0	;BANK0
		MOVWF	DCINLV		;PUT LOW RESULT IN REGISTER
		MOVFW	DCINHV		;LOOK FIRST AT HIGH RESULT ONLY
#if W7GLF && LIFEPO4
;		
; ERC   -- FOR LIFEPO4 we want to flash when 12.8 volts or less which is
;         (12.8 * (10/110) / 3.3) * 1024.  Measurement shows 12.8 * 27.14 = 346 or 015AH
		BTFSC	STATUS,Z
		GOTO	DCLOW			;COMPARE TO THRESHOLD  - LESS THAN 256
		; IF WE GET HERE >=256
		; See if DCINHV >= 512
		XORLW	001H
		BTFSS	STATUS,Z
		RETURN			;COMPARE TO THRESHOLD  >= 512
		; IF WE GET HERE >= 256 and < 512
		; See if low byte is greater than 5AH
		MOVFW	DCINLV
		SUBLW	5AH
		; If positive then <= 5AH
		BTFSS	STATUS,C
#else
; we want to flash when 9.5 volts or less
		BTFSS	STATUS,Z
#endif
;
		RETURN			;COMPARE TO THRESHOLD  >= 15BH
DCLOW
		CALL	LEDRED
#if W7GLF && ERCBLINK
; ERC   -- Do some blinking for low battery
		BTFSC	GFLAG,RXSTAT	;IF NOT RX STATE
		GOTO	W7GLF_RX		
		CALL	WAITONE
		CALL	LEDGRN
		CALL	WAITONE
		CALL	LEDRED
		CALL	WAITONE
		CALL	LEDGRN
		CALL	WAITONE
		CALL	LEDRED
		CALL	WAITONE
		CALL	LEDGRN
		CALL	WAITONE
		CALL	LEDRED
W7GLF_RX
#endif
		CALL	LBEEP		;ALARM IF TOO LOW
		BSF	GFLAG,LOWDC	;SET FLAG BIT TO SHOW LOW DC
		RETURN
;
;** GET VCO ERROR VOLTAGE
;
GETVCO		MOVLW	B'10011101'	;SET UP A/D INPUT HERE
		BANKSEL	0
		MOVWF	ADCON0		;OSC/32 , AN3 SELECTED
;
		BSF	STATUS,RP0	;BANK 1
		MOVLW	084H		;RIGHT JUSTIFIED , 3 ANALOGUE IN , REF VDD & VSS
		MOVWF	ADCON1
		BCF	STATUS,RP0	;BANK 0
;
		CALL	ADCWAIT		;WAIT ROUTINE FOR ADC INPUT SETTLE
		BSF	ADCON0,2	;START CONVERSION
;
VCOIL		BTFSC	ADCON0,2
		GOTO	VCOIL		;LOOP TILL CONVERSION DONE
		MOVFW	ADRESH
		MOVWF	VCOHV		;PUT HIGH RESULT IN REGISTER
		BSF	STATUS,RP0	;BANK1
		MOVFW	ADRESL
		BCF	STATUS,RP0	;BANK0
		MOVWF	VCOLV		;PUT LOW RESULT IN REGISTER
		RETURN
;
;** GET 10MHz REFERANCE TUNE VOLTAGE
;
GETREF		MOVLW	B'10001101'	;SET UP A/D INPUT HERE
		BANKSEL	0
		MOVWF	ADCON0		;OSC/32 , AN1 SELECTED
;
		BSF	STATUS,RP0	;BANK 1
		MOVLW	084H		;RIGHT JUSTIFIED , 3 ANALOGUE IN , REF VDD & VSS
		MOVWF	ADCON1
		BCF	STATUS,RP0	;BANK 0
;
		CALL	ADCWAIT		;WAIT ROUTINE FOR ADC INPUT SETTLE
		BSF	ADCON0,2	;START CONVERSION
;
REFIL		BTFSC	ADCON0,2
		GOTO	REFIL		;LOOP TILL CONVERSION DONE
		MOVFW	ADRESH
		MOVWF	REFHV		;PUT HIGH RESULT IN REGISTER
		BSF	STATUS,RP0	;BANK1
		MOVFW	ADRESL
		BCF	STATUS,RP0	;BANK0
		MOVWF	REFLV		;PUT LOW RESULT IN REGISTER
		RETURN
;
;
; **PWM AND STEER LINES DC REFERANCE FREQUENCY CONTROL ROUTINE
;
;   RTUNEH & RTUNEL VALUES STORED IN EEPROM AND RETRIEVED BY THIS ROUTINE
;   RTUNEH & RTUNEL VALUES ARE UPDATED IN ISR
;   PWM 10 BITS AVAILABE, TOP 2 BITS FROM RTUNEH, LOWER 8 BITS IN RTUNEL
;   MSB 3 BITS FOR STEER LINES FROM RTUNEH 	
;
SETREF		MOVLW	LOW ERTUNEL	;POINT TO EEPROM RTUNEL VALUE
		CALL	READEE		;GET LAST EEPROM RTUNEL VALUE
		MOVWF	RTUNEL		;SAVE VALUE		
		ANDLW	B'00000011'	;MASK OFF UNWANTED BITS
		MOVWF	TEMP		;TEMP STORE
;
		MOVLW	LOW ERTUNEH	;POINT TO STEER LINE EEPROM LOCATION
		CALL	READEE		;GET VALUE
		MOVWF	RTUNEH		;SAVE VALUE (3 STEER LINES + 2 HIGH PWM BITS)
;
		BCF	STATUS,C	;CLEAR CARRY
		RRF	TEMP,F
		RRF	TEMP,F
		RRF	TEMP,F
		RRF	TEMP,F		;PUT BITS INTO CORRECT POSITIONS
		BSF	TEMP,3
		BSF	TEMP,2		;SET CONFIG BITS REQUIRED FOR CCP2CON MODE
		MOVFW	TEMP
		BANKSEL	CCP2CON
		MOVWF	CCP2CON		;SET VALUE OF PWM LSB'S (RTUNEL) AND SET PWM MODE
		BANKSEL	0
		MOVFW	RTUNEL		;GET RTUNEL VALUE
		MOVWF	TEMP		;TEMP STORE
		BCF	STATUS,C	;CLEAR CARRY
		RRF	TEMP,F
		RRF	TEMP,F		;PUT BITS INTO CORRECT LOCATIONS
;
		BSF	TEMP,7
		BTFSS	RTUNEH,1	;SET CORRECT PWM BIT 8 FROM RTUNEH B1	
		BCF	TEMP,7
;		
		BSF	TEMP,6		
		BTFSS	RTUNEH,0	;SET CORRECT PWM BIT 7 FROM RTUNEH B0
		BCF	TEMP,6
;
		MOVFW	TEMP
		BANKSEL	CCPR2L
		MOVWF	CCPR2L		;LOAD HIGHER BITS OF PWM , 
		BANKSEL	0
;
		MOVFW	RTUNEH
		ANDLW	B'00011100'	;MASK OFF UNWANTED BITS
		BCF	STATUS,C	;CLEAR CARRY
		MOVWF	TEMP
		RRF	TEMP,F	
		RRF	TEMP,W		;PUT INTO CORRECT LOCATIONS
		MOVWF	PORTE		;UPDATE PORT
		RETURN
;
;
;******************************************************************************
;
;************************* INTERRUPT SERVICE ROUTINE *************************
;
;******************************************************************************
;
INTSERV		CLRF	INTCON		;STOP INTERRUPTS AND SAVE CONTEXT
		MOVWF	W_TEMP 		;Copy W to TEMP register
		SWAPF	STATUS,W 	;Swap status to be saved into W
		CLRF	STATUS 		;bank 0, regardless of current bank, Clears IRP,RP1,RP0
		MOVWF	STATUS_TEMP 	;Save status to bank zero STATUS_TEMP register
		MOVF	PCLATH,W 	;Only required if using pages 1, 2 and/or 3
		MOVWF	PCLATH_TEMP 	;Save PCLATH into W
		CLRF 	PCLATH 		;Page zero, regardless of current page
;
		BANKSEL	CCPR1L		;READ CAPTURE RESULT
		MOVFW	CCPR1L
		BANKSEL	0
		ANDLW	01FH		;MASK OFF UNSUITABLE BITS
		MOVWF	RERROR		;SAVE CURRENT ERROR VALUE
;
		CLRF	LOOPC		;CLEAR LOOP COUNTER TO RESET TIMING ON GPS PULSE
;
;CHECK IF LOW DC INPUT VOLTS HERE, ABORT IF VOLTS LOW OR FALLING
;
		MOVF	DCINHV,F
		BTFSC	STATUS,Z	;IF VOLTS LOW THEN ABORT	
		GOTO	INTDUN
;
		MOVFW	LASTRERROR	;CHECK IF LAST RESULT WAS 0
		BTFSC	STATUS,Z	;AVOID POSSIBLE ROLL UNDER ERROR
		GOTO	ROLZERO	
		SUBLW	01FH		;CHECK IF LAST RESULT WAS 01FH
		BTFSC	STATUS,Z	;AVOID POSSIBLE ROLL OVER ERROR
		GOTO	ROLMAX
;
		MOVFW	LASTRERROR
		SUBWF	RERROR,W	;COMPARE RESULTS
		BTFSC	STATUS,Z	;CHECK IF NO CHANGE
		GOTO	ENDERROR
		BTFSS	STATUS,C	;CHECK IF POSITIVE OR NEGATIVE ERROR
		GOTO	ERRORUP
		GOTO	ERRORDN
;
ROLZERO		MOVFW	LASTRERROR	;LAST ERROR WAS ZERO
		SUBWF	RERROR,W	;COMPARE
		BTFSC	STATUS,Z	;CHECK IF NO CHANGE
		GOTO	ENDERROR	
		BTFSC	STATUS,C	;CHECK IF UP OR DOWN REQUIRED	
		GOTO	ERRORDN
		GOTO	ERRORUP
;
ROLMAX		MOVFW	LASTRERROR	;LAST ERROR WAS MAXED (01FH)
		SUBWF	RERROR,W
		BTFSC	STATUS,Z	;CHECK IF NO CHANGE
		GOTO	ENDERROR
		BTFSS	STATUS,C	;CHECK IF UP OR DOWN REQUIRED	
		GOTO	ERRORUP
;
ERRORDN		DECF	RTUNEL,F	;APPLY CORRECTION TO RTUNEL
		COMF	RTUNEL,W	;CHECK IF NOW 0FFH 
		BTFSC	STATUS,Z	;CHECK IF ROLL OVER
		DECF	RTUNEH,F	;ROLL OVER SO DEC RTUNEH	
		CLRF	NERCOUNT	;RESET ERROR COUNT		
		BSF	GFLAG,CORR	;FORCE UPDATE OF REF TUNE AND EEPROM		
		GOTO	ENDERROR
;
ERRORUP		INCF	RTUNEL,F	;APPLY CORRECTION TO RTUNEL
		BTFSC	STATUS,Z	;CHECK IF ROLL OVER UP TO ZERO	
		INCF	RTUNEH,F	;ROLL OVER SO INC RTUNEH
		CLRF	NERCOUNT	;RESET ERROR COUNT	
		BSF	GFLAG,CORR	;FORCE UPDATE OF REF TUNE AND EEPROM		
;
ENDERROR	BCF	RTUNEH,7	;FORCE UPPER RESET OF UNUSED BITS OF RTUNEH
		BCF	RTUNEH,6
		INCF	NERCOUNT,F	;INCREMENT NO ERROR COUNT 
		BTFSC	STATUS,Z	;CHECK IF ROLL OVER TO ZERO
		DECF	NERCOUNT,F	;DON'T ALLOW ROLL OVER OF NO ERROR COUNTER
;
		MOVFW	RERROR
		MOVWF	LASTRERROR	;UPDATE LAST ERROR VALUE
;
		BSF	GFLAG,GPS
;
INTDUN		NOP
		BANKSEL	PIR1		;CLEAR CCP1 INTERRUPT FLAG AND ENABLE INTERRUPTS
		BCF	PIR1,CCP1IF
		BANKSEL	PIE1
		BSF	PIE1,CCP1IE	;ENABLE CCP1 INT
		BANKSEL	0
		BSF	INTCON,PEIE	;ENABLE PERIPHERAL INTERRUPTS
;		
		MOVF	PCLATH_TEMP,W 	;Restore PCLATH
		MOVWF	PCLATH 		;Move W into PCLATH
		SWAPF	STATUS_TEMP,W 	;Swap STATUS_TEMP register into W
		MOVWF	STATUS 		;Move W into STATUS register
		SWAPF	W_TEMP,F 	;Swap W_TEMP
		SWAPF	W_TEMP,W 	;Swap W_TEMP into W
;
		RETFIE			;RETURN FROM INTERRUPT , ALSO ENABLES GIE
;
;
;******************************************************************************
;**************************** GENERAL SUBROUTINES *****************************
;******************************************************************************
;
;
;******************************************************************************
;
;RS232 DATA COMMS ROUTINES
;
;******************************************************************************
;
CHKCOMMS	NOP			;CHECK FOR RX RS232 COMMS
		BANKSEL	0			
		BTFSC	RCSTA,1		;CHECK FOR ERRORS
		CALL	CLRCOMME
		BTFSC	RCSTA,2
		CALL	CLRCOMME
;
		BTFSS	PIR1,RCIF	;CHECK IF CHARACTER RECEIVED
		RETURN			;NO DATA SO RETURN
;
NEWCOMM		MOVLW	HIGH COMPROMPT	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW COMPROMPT	;PRINT COMMAND PROMPT
		CALL	PRMEM
		MOVLW	COMMSBUFF0
		MOVWF	COMPOINT	;SET UP COMMS BUFFER POINTER START
;
COMMSRX		MOVLW	080H		;CHARACTER RECEIVED
		MOVWF	SERTOC		;LOAD TIME OUT COUNTER
;
		BCF	PIR1,RCIF	;CLEAR RECEIVED FLAG
		MOVFW	COMPOINT
		MOVWF	FSR
		MOVFW	RCREG		;READ RS232 RX DATA
		MOVWF	INDF		;USE POINTER TO WRITE TO BUFFER		
		INCF	COMPOINT,F	;GOTO NEXT LOCATION
		SUBLW	00DH		;CHECK IF "CR" RECEIVED
		BTFSC	STATUS,Z
		GOTO	SERPROC		;PROCESS COMMAND
;
		MOVFW	INDF
		SUBLW	01BH		;CHECK IF ESC
		BTFSC	STATUS,Z
		RETURN			;ABBORT COMMAND IF ESC
;
		MOVFW	INDF		;READ DATA FROM BUFFER
		CALL	TXCOMS		;ECHO CHARACTER
;
		MOVFW	COMPOINT
		SUBLW	COMMSBUFFE+1	;CHECK IF AT END OF BUFFER		
		BTFSC	STATUS,Z
		GOTO	SERPROC		;IF AT END THEN AUTOMATICALLY PROCESS
;
COMWAITH	CALL	WAIT		;LOOP TILL COMMAND COMPLETED OR TIME OUT
		DECF	SERTOC,F	;DECREMENT COMAND TIME OUT COUNTER
		BTFSC	STATUS,Z
		GOTO	SERERR	
		BTFSS	PIR1,RCIF	;CHECK IF DATA RECEIVED	
		GOTO	COMWAITH	;LOOP TILL DATA RECEIVED OR TIME OUT		
		GOTO	COMMSRX
;
SERERR		MOVLW	HIGH COMERROR	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW COMERROR	;PRINT ERROR
		CALL	PRMEM
		MOVLW	HIGH NOERROR	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW NOERROR	;PRINT SPACES
		CALL	PRMEM
		CALL	WAITONE
		CALL	WAITONE
		RETURN
;
CLRCOMME	MOVFW	RCREG
		BCF	RCSTA,CREN	;CLEAR RXCOMS ERRORS
		BSF	RCSTA,CREN
		MOVFW	RCREG		;READ BUFFER TO CLEAR DATA
		RETURN
;
;SERIAL COMMAND TRAPPING
;
SERPROC		MOVLW	COMMSBUFF0	;PROCESS INCOMING SERIAL DATA 
		MOVWF	FSR		;INDIRECT POINTER LOAD
		MOVFW	INDF		;USE POINTER TO READ COMMAND BUFFER		
		MOVWF	R0		;TEMP STORE
		BCF	R0,5		;FORCE UPPER CASE ONLY
;
		MOVFW	R0
		SUBLW	"T"		;TRAP FOR "T" TUNE	
		BTFSC	STATUS,Z
		GOTO	COMTUN		;COMMAND IS TUNE
;
		MOVFW	R0
		SUBLW	"B"		;TRAP FOR "B" BEACON
		BTFSC	STATUS,Z
		GOTO	COMMOR		;COMMAND IS BEACON
;
		MOVFW	R0
		SUBLW	"E"		;TRAP FOR "E" EEPROM CHANNEL E USER PROGRAM
		BTFSC	STATUS,Z
		GOTO	COMEUP		;COMMAND IS EEPROM USER PROG
;
		MOVFW	R0
		SUBLW	"C"		;TRAP FOR "C" MORSE BEACON CARRIER TIME
		BTFSC	STATUS,Z
		GOTO	COMMBC		;COMMAND IS BEACON CARRIER TIME
;
;OTHER RS232 COMMANDS GO HERE
;
		GOTO	SERERR		;UNKNOWN COMMAND SO ABBORT WITH ERROR
;
;
;
;SERIAL COMMAND PROCESSING
;
COMTUN		INCF	FSR,F		;POINT TO NEXT LOCATION
		MOVFW	INDF		;GET FIRST BYTE
		MOVWF	R1		;STORE FOR CONVERSION	
		INCF	FSR,F
		MOVFW	INDF		;GET SECOND BYTE
		MOVWF	R0
		CALL	ASCII2HEX	;CONVERT TO HEX
		MOVWF	R0		;TEMP STORE
		MOVLW	LOW ERTUNEH
		MOVWF	EEPOINT
		MOVFW	R0		;GET DATA
		CALL	EEWRITE		;WRITE TO EEPROM
;
		INCF	FSR,F		;POINT TO NEXT LOCATION
		MOVFW	INDF		;GET FIRST BYTE
		MOVWF	R1		;STORE FOR CONVERSION	
		INCF	FSR,F
		MOVFW	INDF		;GET SECOND BYTE
		MOVWF	R0
		CALL	ASCII2HEX	;CONVERT TO HEX
		MOVWF	R0		;TEMP STORE
		MOVLW	LOW ERTUNEL
		MOVWF	EEPOINT
		MOVFW	R0		;GET DATA
		CALL	EEWRITE
		GOTO	COMMEND		;END COMMAND	
;
COMMOR		MOVLW	LOW IDENTMORSE
		MOVWF	EEPOINT		;LOAD EEPROM POINTER TO START OF MORSE CALLSIGN
		INCF	FSR,F		;POINT TO START OF NEW USER INPUT DATA
		MOVLW	D'24'		;SET MAXIMUM CALLSIGN LENGTH (24D)
		MOVWF	R0		;MAX LOOP COUNTER
WRMORLOP	MOVFW	INDF		;GET DATA FROM BUFFER		
		MOVWF	R1		;TEMP STORE
		SUBLW	00DH	
		BTFSC	STATUS,Z
		CLRF	R1		;SET DATA TO OOOH IF ASCII WAS OODH (CR)
		MOVFW	R1		;GET DATA
		CALL	EEWRITE
		INCF	EEPOINT,F	;POINT TO NEXT EEPROM LOCATION
		INCF	FSR,F		;POINT TO NEXT BUFFER LOCATION
		DECF	R0,F
		BTFSS	STATUS,Z
		GOTO	WRMORLOP	;CONTINUE LOOP
		CLRW
		CALL	EEWRITE		;ENSURE LAST BYTE IS 000H
		GOTO	COMMEND		;END COMMAND
;
COMEUP		MOVLW	LOW FREQER	;WRITE FREQER R1,R0, THEN FREQET R1,R0, 12 BYTES TOTAL
		MOVWF	EEPOINT		;LOAD EEPROM POINTER TO START CHANNEL "E" DATA
		INCF	FSR,F		;POINT TO START OF NEW USER INPUT DATA
		MOVLW	D'12'		;SET MAXIMUM OUTPUT DATA LENGTH (12 X 2 BUFFER BYTES = 24D)
		MOVWF	R2		;MAX LOOP COUNTER
EUPLOP		MOVFW	INDF		;GET DATA FROM BUFFER		
		MOVWF	R1		;TEMP STORE OF EACH MSB
		SUBLW	00DH	
		BTFSC	STATUS,Z
		GOTO	COMEREP		;ABBORT IF ASCII WAS OODH (CR)
		INCF	FSR,F
		MOVFW	INDF		;GET DATA FROM BUFFER		
		MOVWF	R0		;TEMP STORE OF EACH LSB
		SUBLW	00DH	
		BTFSC	STATUS,Z
		GOTO	COMEREP		;ABBORT IF ASCII WAS OODH (CR)
		CALL	ASCII2HEX	;CONVERT 2 BYTE ASCII R1&R0 INTO 1 BYTE HEX	
		CALL	EEWRITE
		INCF	EEPOINT,F	;POINT TO NEXT EEPROM LOCATION
		INCF	FSR,F		;POINT TO NEXT BUFFER LOCATION
		DECF	R2,F		;CHECK IF LOOP LENGTH EXCEEDED
		BTFSS	STATUS,Z
		GOTO	EUPLOP		;CONTINUE LOOP
;
COMEREP		MOVLW	D'6'		;DUPLICATE CHANNEL E DATA INTO CORRECT CHANNEL F POSITIONS
		MOVWF	R2		;LOOP COUNTER
		MOVLW	LOW FREQET	;GET FIRST EEPROM DATA SET
		MOVWF	EEPOINT
COMREPL1	MOVFW	EEPOINT
		CALL	READEE		;GET EEPROM DATA	
		MOVWF	R1		;TEMP STORE OF DATA
		MOVLW	D'6'		;APPLY OFFSET
		ADDWF	EEPOINT,F
		MOVFW	R1		;GET DATA
		CALL	EEWRITE		
		MOVLW	D'06'		;REMOVE OFFSET
		SUBWF	EEPOINT,F
		INCF	EEPOINT,F	;GOTO NEXT LOCATION
		DECF	R2,F
		BTFSS	STATUS,Z
		GOTO	COMREPL1	;LOOP 6 TIMES	
;		
		MOVLW	D'6'		;DUPLICATE CHANNEL E DATA INTO CORRECT CHANNEL F POSITIONS
		MOVWF	R2		;LOOP COUNTER
		MOVLW	LOW FREQER	;GET FIRST EEPROM DATA SET
		MOVWF	EEPOINT
COMREPL2	MOVFW	EEPOINT
		CALL	READEE		;GET EEPROM DATA	
		MOVWF	R1		;TEMP STORE OF DATA
		MOVLW	D'18'
		ADDWF	EEPOINT,F	;APPLY OFFSET	
		MOVFW	R1		;GET DATA
		CALL	EEWRITE		
		MOVLW	D'18'		;REMOVE OFFSET
		SUBWF	EEPOINT,F		
		INCF	EEPOINT,F	;GOTO NEXT LOCATION
		DECF	R2,F
		BTFSS	STATUS,Z
		GOTO	COMREPL2	;LOOP 6 TIMES
		GOTO	COMMEND		;DONE
;
COMMBC		INCF	FSR,F		;POINT TO START OF USER INPUT NEW DATA
		MOVFW	INDF		;GET MSB DATA FROM BUFFER		
		MOVWF	R1		;TEMP STORE
		SUBLW	00DH	
		BTFSC	STATUS,Z
		GOTO	COMMEND		;ABBORT IF ASCII WAS OODH (CR)
		INCF	FSR,F
		MOVFW	INDF
		MOVWF	R0
		SUBLW	00DH	
		BTFSC	STATUS,Z
		GOTO	COMMEND		;ABBORT IF ASCII WAS OODH (CR)
		MOVLW	LOW ECARDEL
		MOVWF	EEPOINT		;LOAD EEPROM POINTER TO BEACON CARRIER DELAY
		CALL	ASCII2HEX	;CONVERT USER INPUT R1&R0 VALUES TO HEX BYTE IN W
		CALL	EEWRITE		;WRITE NEW DATA TO EEPROM
		GOTO	COMMEND
;
;NEW COMMAND PROCESSING ROUTINES GO HERE
;
		NOP
;
;
;
COMMEND		MOVLW	HIGH COMOK	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW COMOK
		CALL	PRMEM
;
ENDCOMMS	CALL	WAITONE
		CALL	WAITONE
		GOTO	0000H		;REBOOT TO READ ALL NEW EEPROM DATA
;
;PRINT STATUS
;
PRINTSTAT	BTFSC	PORTC,RFMUX	;CHECK IF PLL LOCKED		
		GOTO	STATNORM
		MOVLW	HIGH PLLERRT	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW PLLERRT	;PLL ERROR STRING FROM PROGRAM MEMORY
		CALL	PRMEM			
;	
STATNORM	BTFSS	GFLAG,LOWDC	;CHECK IF DC IS LOW
		GOTO	PRINTR
		MOVLW	HIGH LOWDCERRT	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW LOWDCERRT	;LOW DC ERROR STRING FROM PROGRAM MEMORY
		CALL	PRMEM
;
PRINTR		MOVLW	HIGH NOERROR	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW NOERROR	;NO ERROR STRING FROM PROGRAM MEMORY
		CALL	PRMEM
		MOVLW	00DH
		CALL	TXCOMS
		MOVLW	020H
		CALL	TXCOMS
		MOVFW	RERROR
		CALL	PHEX		;SEND STATUS TO RS232
		MOVFW	RTUNEH		
		CALL	PHEX
		MOVLW	08H
		CALL	TXCOMS		;BS TO GIVE 2 BYTE PACKED RESULT
		MOVFW	RTUNEL
		CALL	PHEX
		MOVFW	REFHV
		CALL	PHEX
		MOVLW	08H
		CALL	TXCOMS		;BS TO GIVE 2 BYTE PACKED RESULT
		MOVFW	REFLV
		CALL	PHEX
		MOVFW	NERCOUNT
		CALL	PHEX
		MOVFW	VCOHV
		CALL	PHEX
		MOVLW	08H
		CALL	TXCOMS
		MOVFW	VCOLV
		CALL	PHEX
		MOVFW	DCINHV
		CALL	PHEX
		MOVLW	08H
		CALL	TXCOMS
		MOVFW	DCINLV
		CALL	PHEX
		MOVLW	020H
		CALL	TXCOMS
		MOVLW	020H
		CALL	TXCOMS
;
		BTFSC	GFLAG,CURS	;FLASH CURSOR ROUTINE	
		GOTO	CURSOFF
CURSON		BSF	GFLAG,CURS
		MOVLW	03EH		;>
		CALL	TXCOMS
		MOVLW	05FH		;_
		CALL	TXCOMS
		GOTO	CURSEND
;
CURSOFF		BCF	GFLAG,CURS
		MOVLW	020H
		CALL	TXCOMS
		MOVLW	020H
		CALL	TXCOMS
CURSEND		BTFSS	GFLAG,GPS	;CHECK IF GPS IS ACTIVE
		RETURN
		BCF	GFLAG,GPS	;RESET GPS FLAG		
		MOVLW	HIGH GPSSTRING	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW GPSSTRING	;SEND GPS STRING
		CALL	PRMEM
		RETURN
;
PRBOOT		MOVLW	007H		;PRINT BOOT UP STRING , BELL
		CALL	TXCOMS
		MOVLW	00CH		;FORM FEED
		CALL	TXCOMS
		CALL	PRCRLF
		MOVLW	HIGH TXTBOOT	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW TXTBOOT	;BOOT STRING FROM PROGRAM MEMORY
		CALL	PRMEM			
		CALL	PRCRLF
		CALL	PRCRLF
		MOVLW	HIGH SERIAL	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW SERIAL	;LOAD SERIAL # ADDRESS FROM EEPROM	
		CALL	PRMEM
		CALL	PRCRLF
		CALL	PRCRLF
		MOVLW	HIGH CALLHEAD	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW CALLHEAD	;CALLSIGN HEADER
		CALL	PRMEM
;
		MOVLW	LOW IDENTMORSE	;GET MORSE CALLSIGN HEADER
		MOVWF	TEMP		;TEMP STORE
MCALLPR		MOVFW	TEMP
		CALL	READEE		;READ EEPROM DATA		
		BTFSC	STATUS,Z	;CHECK IF DATA IS 000H	
		GOTO	ENDMPR		;END OF MORSE STRING SO CONTINUE BOOT UP PRINTING
		CALL	TXCOMS		;PRINT MORSE DATA
		INCF	TEMP,F		;GOTO NEXT LOCATION
		GOTO	MCALLPR		;CONTINUE TILL DONE
;
ENDMPR		CALL	PRCRLF		;PRINT MORSE BEACON CARRIER DELAY HEADER AND VALUE
		CALL	PRCRLF
		MOVLW	HIGH MBDHEAD	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW MBDHEAD	;HEADER STRING FROM PROGRAM MEMORY
		CALL	PRMEM
		MOVLW	LOW ECARDEL	;BEACON CARRIER DELAY VALUE FROM EEPROM
		CALL	READEE
		CALL	PHEX		;PRINT VALUE
;
		CALL	PRCRLF		;PRINT MORSE BEACON CARRIER DELAY HEADER AND VALUE
		CALL	PRCRLF
		MOVLW	HIGH ECHEAD	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW ECHEAD	;HEADER STRING FROM PROGRAM MEMORY
		CALL	PRMEM
		MOVLW	LOW FREQER	;START OF CHANNEL "E" EEPROM DATA
		MOVWF	MEMPOINT		
		MOVLW	D'12'		;12 LOCATIONS TO PRINT
		MOVWF	TEMP
PREELOP		MOVFW	MEMPOINT	;GET EEPROM LOCATION
		CALL	READEE		;READ EEPROM
		CALL	PHEX		;PRINT HEX VALUE
		INCF	MEMPOINT,F	;GOTO NEXT EEPROM LOCATION
		DECF	TEMP,F
		BTFSS	STATUS,Z
		GOTO	PREELOP
;
		CALL	PRCRLF		;PRINT DIAGNOSTICS HEADER
		CALL	PRCRLF
		MOVLW	HIGH DIAGHEAD	;GET HIGH POINTER (TABLE START ADDRESS)
		MOVWF	MEMPOINT	;LOAD POINTER
		MOVLW	LOW DIAGHEAD	;DIAGNOSTICS HEADER STRING FROM PROGRAM MEMORY
		CALL	PRMEM
		CALL	PRCRLF
		CALL	PRCRLF
		RETURN				
;
PRCRLF		MOVLW	00DH		;PRINT CR & LF
		CALL	TXCOMS
		MOVLW	00AH
		CALL	TXCOMS
		RETURN
;
;
;** PRINT HEX DATA IN WREG 
;
PHEX		CALL	HEX2ASCII	;CONVERT DATA TO ASCII
		MOVFW	R1	
		CALL	TXCOMS		;SEND FIRST DIGIT
		MOVFW	R0
		CALL	TXCOMS		;SEND SECOND DIGIT
		MOVLW	020H		;PUT IN SPACE
		CALL	TXCOMS		
		CLRWDT
		RETURN
;
;** HEX TO ASCII CONVERTOR , ENTER WITH HEX IN W , EXIT WITH ASCII
;** MSB IN R1 & LSB IN R0
;
HEX2ASCII	CLRWDT
		MOVWF	R1		;SAVE DATA
		ANDLW	00FH		;MASK OFF TOP BITS
		MOVWF	R0
		MOVLW	0AH		;CHECK IF DIGIT OR LETTER
		SUBWF	R0,W
		BTFSC	STATUS,C
		GOTO	HEXASIN			
		MOVLW	030H		;DIGIT SO ADD 30H
		ADDWF	R0,1
		GOTO	ASCNIB
HEXASIN		MOVLW	037H		;LETTER SO ADD 37H
		ADDWF	R0,1
ASCNIB		SWAPF	R1,0
		ANDLW	00FH
		MOVWF	R1
		MOVLW	0AH
		SUBWF	R1,W
		BTFSC	STATUS,C
		GOTO	HEXASIM	
		MOVLW	030H
		ADDWF	R1,1
		RETURN
HEXASIM		MOVLW	037H
		ADDWF	R1,1
		RETURN
;
;ASCII TO HEX CONVERTOR, ENTER WITH ASCII IN R1 MSB & R0 LSB
;EXIT WITH HEX IN W
;
ASCII2HEX	MOVFW	R0		;GET LSB BYTE
		BTFSS	R0,4		;CHECK IF LETTER OR NUMBER
		ADDLW	009H		;CORRECT IF WAS NUMBER
		ANDLW	00FH		;MASK OFF TOP BITS	
		MOVWF	R0		;R0 HOLDS BOTTOM NIBBLE
;
		MOVFW	R1		;GET LSB BYTE
		BTFSS	R1,4
		ADDLW	009H		;CORRECT IF REQUIRED
		ANDLW	00FH		;MASK OFF TOP BITS	
		MOVWF	R1
		SWAPF	R1,W
		ADDWF	R0,W		;RESULT NOW IN W
		RETURN
;
;** PRINT EEPROM STRING, W CONTAINS START ADDRESS OF STRING, STRING MUST END IN 000H 
;
PREEPROM	MOVWF	R0		;STORE START ADDRESS
PREEPROML	MOVFW	R0
		CALL	READEE
		BTFSC	STATUS,Z	;CHECK IF DATA IS 000H
		RETURN			;RETURN IF DONE
		CALL	TXCOMS		;PRINT CHARACTER
		INCF	R0,F
		GOTO	PREEPROML	;LOOP
;
;** PRINT STRING FROM PROGRAM MEMORY , W CONTAINS START ADDRESS OF OFFSET FROM START OF EACH STRING TABLE , STRING MUST END IN 000H
;MEMPOINT STRING PAGE MUST BE SET PRIOR TO CALLING THIS ROUTINE
;
PRMEM		MOVWF	R0		;STORE START ADDRESS
PRMEML		MOVFW	R0		;GET LSB POINTER
		CALL	READPROG
		BTFSC	STATUS,Z	;CHECK IF FIRST BYTE IS 000H
		RETURN			;RETURN IF DONE
		CALL	TXCOMS
		INCF	R0,F
		GOTO	PRMEML
;
;
;
;** TX DATA ROUTINE ON COMMS PORT , DATA IN W , WAITS TILL PREVIOUS CHARACTER 
;** IS SENT THEN RETURNS.		
;
TXCOMS		NOP
		BANKSEL	TXSTA
		BTFSS	TXSTA,TRMT		
		GOTO	TXCOMS		;WAIT TILL SENT
		BANKSEL	0
		MOVWF	TXREG		;SEND NEW DATA
		CLRWDT
		RETURN		
;
;
;****************************** MEMORY ROUTINES *******************************
;
;READ EEPROM DATA, W CONTAINS ADDRESS ON ENTRY AND DATA ON EXIT
;
READEE		NOP
		BANKSEL	EEADR
		MOVWF 	EEADR 		;Address to read
		BANKSEL	EECON1
		BCF 	EECON1,EEPGD 	;Point to Data memory
		BSF 	EECON1,RD 	;EE Read
		BANKSEL	EEDATA
		MOVF 	EEDATA,W 	;W = EEDATA	
		BANKSEL	0		;BANK0
		RETURN
;
;
;WRITE DATA TO EEPROM , EEPOINT CONTAINS ADDRESS AND W CONTAINS DATA 
;
EEWRITE		NOP
		BANKSEL	EEDATA
		MOVWF	EEDATA		;LOAD DATA
		MOVFW	EEPOINT			
		MOVWF	EEADR		;LOAD ADDRESS LOW BITS
		CLRF	EEADRH		;CLEAR HIGH BITS
		BANKSEL	EECON1
		BCF	EECON1,EEPGD	;POINT TO DATA MEMORY
		BSF	EECON1,WREN	;ENABLE WRITES
		BCF	INTCON,GIE	;DISSABLE INTERRUPTS
		MOVLW	055H
		MOVWF	EECON2
		MOVLW	0AAH
		MOVWF	EECON2
		BSF	EECON1,WR	;REQUIRED SEQUENCE FOR WRITES
		BTFSC	EECON1,WR
		GOTO	$-1		;LOOP TILL WRITE IS COMPLETE
		BCF	EECON1,WREN	;DISABLE WRITES
		BANKSEL	0
		BSF	INTCON,GIE	;RE-ENABLE INTERRUPTS
		RETURN
;
;
;READ PROGRAM MEMORY, W CONTAINS OFFSET FROM 0700H
;ON EXIT W CONTAINS LSB , & GR0 CONTAINS MSB OF LOCATION   
;
READPROG	BSF 	STATUS,RP1	
		BCF 	STATUS,RP0 	; Bank 2
		MOVWF 	EEADR 		; LS Byte of Program Address to read
		MOVFW 	MEMPOINT	;GET MEMORY PAGE POINTER, MUST BE SET PRIOR TO CALL
		MOVWF 	EEADRH 		; MS Byte of Program Address to read
		BSF 	STATUS,RP0	; Bank 3
		BSF 	EECON1,EEPGD 	; Point to PROGRAM memory
		BSF 	EECON1,RD 	; EE Read
;
		NOP			; Any instructions here are ignored as program
		NOP 			; memory is read in second cycle after BSF EECON1,RD
;
		BCF 	STATUS,RP0 	; Bank 2
		MOVF 	EEDATA,W 	; W = LS Byte of Program EEDATA
		BCF	STATUS,RP1	;BACK TO BANK 0
;
		RETURN
;
;************************ TONE AND DELAY SUBROUTINES **************************
;** CW SIDE TONE FREQUENCY
CWTDEL		CLRWDT
		MOVLW	001H
		MOVWF	R3
		MOVLW	003H
		MOVWF	R2
		MOVWF	R1
		CALL	DELAY
		RETURN
;
;** ADC INPUT SETTLE TIME , 1.5MS APPROX
ADCWAIT		CLRWDT
		MOVLW	001H
		MOVWF	R3
		MOVLW	003H
		MOVWF	R2
		MOVWF	R1
		CALL	DELAY
		RETURN
;
;** WAIT SHORT TIME , 100MS APPROX
WAIT		CLRWDT
		MOVLW	001H
		MOVWF	R3
		MOVLW	074H
		MOVWF	R2
		MOVWF	R1
		CALL	DELAY
		RETURN
;
;
;** WAIT 1 SECOND ROUTINE
;
WAITONE		CLRWDT
		MOVLW	005H
		MOVWF	R3
		MOVLW	0CFH
		MOVWF	R2
		MOVWF	R1
		CALL	DELAY
		RETURN
;
;
;
;** CARRIER DELAY ROUTINE , ABBORTS IF PTT OR KEY GOES HIGH
;
CARRIER		CLRWDT
		MOVLW	LOW ECARDEL 
		CALL	READEE
		MOVWF	CARDEL		;LOAD CARDEL REGISTER
		BTFSC	STATUS,Z	;CHECK IF CARRIER DELAY IS ZERO				
		RETURN
;
CARLOOP		MOVLW	00DH		;VALUES FOR 1 SECOND
		MOVWF	R3
		MOVLW	040H
		MOVWF	R2
		MOVWF	R1
DELAYC		DECFSZ	R1,1     	
		GOTO 	DELAYC     	
		DECFSZ	R2,1                    
		GOTO	DELAYC
		CLRWDT
		BTFSC	PORTA,KEYIN	
		RETURN			;ABBORT IF KEY LINE GOES HIGH
		BTFSC	PORTD,PTTIN
		RETURN			;ABBORT IF PTT LINE GOES HIGH
		DECFSZ	R3,1      	;MOST SIGNIFICANT REGISTER
       		GOTO	DELAYC
		CLRWDT
;
ACARLOP		DECF	CARDEL,F	;LOOP TILL CARDEL EXPIRED
		BTFSC	STATUS,Z
		RETURN		
		GOTO	CARLOOP				
;
;
;** DUMB DELAY SUBROUTINE
;
DELAY		DECFSZ	R1,1     	;ALL FF IS 19 SECONDS
		GOTO 	DELAY     	
		DECFSZ	R2,1                    
		GOTO	DELAY
		CLRWDT
		DECFSZ	R3,1      	;MOST SIGNIFICANT REGISTER
       		GOTO	DELAY
		CLRWDT
		RETURN
;
;** DOT BEEP FM
;
DBEEPFM		NOP
		BANKSEL	TRISD
		BCF	TRISD,FSK	;MAKE FSK AND SIDETONE LOW Z OUTPUT
		BCF	TRISD,SIDETONE
		BANKSEL	0
BEPML		MOVLW	038H		;TONE DURATION
        	MOVWF	R3
BEPMD		DECFSZ	R3,F
		GOTO	BEPMHT
		BANKSEL	TRISD
		BSF	TRISD,FSK	;MAKE FSK AND SIDETONE HI Z
		BSF	TRISD,SIDETONE
		BANKSEL	0
        	RETURN
BEPMHT		BSF	PORTD,SIDETONE	;GENERATE AUDIO
		BSF	PORTD,FSK
		MOVLW	0FEH		;FREQ 
		MOVWF	R1		;COUNT REGISTER
BEPMHLH		NOP
		NOP		
		NOP
		DECFSZ	R1,F
		GOTO	BEPMHLH
		BCF	PORTD,SIDETONE
		BCF	PORTD,FSK
		MOVLW	0FEH		;FREQ 
		MOVWF	R1
BEPMHLL		NOP
		NOP
		NOP
		DECFSZ	R1,F
		GOTO	BEPMHLL
		GOTO	BEPMD		;LOOP TILL FINNISHED
;
;** DOT BEEP CW
;
DBEEPCW		NOP
		BANKSEL	TRISD
		BCF	TRISD,SIDETONE	;SIDETONE LOW Z OUTPUT
		BANKSEL	0
CBEPML		MOVLW	038H		;TONE DURATION
        	MOVWF	R3
CBEPMD		DECFSZ	R3,F
		GOTO	CBEPMHT
		BANKSEL	TRISD
		BSF	TRISD,SIDETONE	;MAKE SIDETONE HI Z
		BANKSEL	0
        	RETURN
;
CBEPMHT		BSF	PORTD,SIDETONE	;GENERATE AUDIO
		MOVLW	0FEH		;FREQ 
		MOVWF	R1		;COUNT REGISTER
CBEPMHLH	NOP
		NOP		
		NOP
		DECFSZ	R1,F
		GOTO	CBEPMHLH
		BCF	PORTD,SIDETONE
		MOVLW	0FEH		;FREQ 
		MOVWF	R1
CBEPMHLL	NOP
		NOP
		NOP
		DECFSZ	R1,F
		GOTO	CBEPMHLL
		GOTO	CBEPMD		;LOOP TILL FINNISHED
;
;
;** GENERATE LOW BEEP TO TX TONES (SHORT LOW BEEP)
;
LBEEP  		CALL	WAIT		;SHORT DELAY BEFORE BEEP
		BANKSEL	TRISD
		BCF	TRISD,SIDETONE
		BCF	TRISD,FSK
		BANKSEL	0		;LOW Z SIDETONE AND FSK LINES
		BCF	PORTD,FSK
		BCF	PORTD,SIDETONE	;RESET AUDIO
LBEPML		MOVLW	040H		;TONE DURATION
        	MOVWF	R3
LBEPMD		DECFSZ	R3,F
		GOTO	LBEPMHT
		BANKSEL	TRISD		;HI Z SIDETONE AND FSK LINES
		BSF	TRISD,SIDETONE
		BSF	TRISD,FSK
		BANKSEL	0
        	RETURN
LBEPMHT		BSF	PORTD,SIDETONE	;GENERATE AUDIO
		BSF	PORTD,FSK
		MOVLW	0F0H		;FREQ 
		MOVWF	R1		;COUNT REGISTER
LBEPMHLH	CLRWDT
		NOP
		DECFSZ	R1,F
		GOTO	LBEPMHLH
		BCF	PORTD,SIDETONE
		BCF	PORTD,FSK
		MOVLW	0F0H		;FREQ 
		MOVWF	R1
LBEPMHLL	CLRWDT
		NOP
		DECFSZ	R1,F
		GOTO	LBEPMHLL
		GOTO	LBEPMD		;LOOP TILL FINNISHED
;
;******************************************************************************
;************************ MORSE GENERATION ROUTINES ***************************
;******************************************************************************
;
;** SEND MORSE CODE IDENT STRING
;
MORSEIDENT	MOVLW	LOW IDENTMORSE	;POINT TO START OF IDENT TEXT		
		MOVWF	MORSECH		;STORE START ADDRESS
MREEPROML	MOVFW	MORSECH
		CALL	READEE
		BTFSC	STATUS,Z	;CHECK IF DATA IS 000H
		RETURN			;RETURN IF DONE
		BTFSC	PORTA,KEYIN	
		RETURN			;ABBORT IF KEY LINE GOES HIGH
		BTFSC	PORTD,PTTIN
		RETURN			;ABBORT IF PTT LINE GOES HIGH
		CALL	READMORSE	;LOOK UP MORSE TABLE AND STORE IN DATA REGISTERS
		MOVF	MORSE1,F	;CHECK IF CHARACTER DATA WAS 000H IE SPACE
		BTFSC	STATUS,Z
		CALL	MSPACE		;ADD SPACE IF REQUIRED
		CALL	TXTMORSE	;SEND MORSE CHARACTER FROM DATA, ADDS 1 DOT DELAY ALSO
		CALL	DOTD
		CALL	DOTD		;SPACE BETWEEN CHARACTERS
		INCF	MORSECH,F
		GOTO	MREEPROML	;LOOP
;
MSPACE		CALL	DOTD		;ADD REQUIRED TIME FOR WORD SPACE
		CALL	DOTD
		CALL	DOTD
		CALL	DOTD		
		RETURN
;
;** SEND MORSE CHARACTER FROM LOOKED UP DATA REGISTERS
;
TXTMORSE	BTFSS	MORSE1,7	;LOOK AT FIRST BIT		
		GOTO	CHECKKY
		CALL	DOT		;KEY TX, SEND AUDIO BEEP IF FM
CHECKKY		BTFSC	MORSE1,7		
		GOTO	MORSEDEL
;
;DOT OFF
;
		BCF	PORTD,SIDETONE	;SIDETONE LOW
		CALL	LEDOFF		;PUT LED OFF
		BTFSS	GFLAG,CWON	;CHECK IF DOT WAS CW OR FM
		GOTO	FMDOTFIN
		BCF	GFLAG,CWON	;CLEAR CW ON FLAG
		CALL	SYNTHRX		;END OF CW DOT SO ALWAYS ON RX FREQ HERE
;
FMDOTFIN	CALL	DOTD		;MORSE DOT TIME			
MORSEDEL	MOVLW	B'11000000'	;LOOK AT BIT 7 & 6 ONLY
		ANDWF	MORSE1,W
		BTFSC	STATUS,Z	;CHECK IF FINNISHED
		RETURN			;END IF DONE
		BCF	STATUS,C	;CLEAR CARRY
		RLF	MORSE3,F	;ROTATE DATA TO GET NEXT BIT
		RLF	MORSE2,F
		RLF	MORSE1,F		
		GOTO	TXTMORSE	;LOOP TILL DONE
;
;DOT DELAY
;
DOTD		MOVLW	LOW EWPM	;DOT DELAY DURING PAUSES (RX TIME)
		CALL	READEE		;GET WPM DATA HIGH BYTE
		MOVWF	R3
		MOVLW	LOW (EWPM+1)	;GET WPM DATA LOW BYTE
		CALL	READEE
		MOVWF	R2
		MOVWF	R1
		CALL	DELAY
		RETURN
;
;DOT ON (SEND)
;
DOT		BTFSC	PORTB,SW1	;CHECK IF CW OR FM MODE	
		GOTO	DOTCW		
;
DOTFM		CALL	LEDRED
		CALL	DBEEPFM		;USE TONE GENERATION ROUTINE
		RETURN
;
DOTCW		BTFSC	GFLAG,CWON
		GOTO	DOTCWON
		BSF	GFLAG,CWON	;SET FLAG TO SHOW CW KEY IS ON
		CALL	SYNTHTX		;TX FREQ TO SEND CW
DOTCWON		CALL	LEDRED
		CALL	DBEEPCW
		RETURN
;
;
;READ PROGRAM MEMORY CONTAINING MORSE CHARACTER DATA
;W CONTAINS OFFSET FROM MORSE TABLE START EQUAL TO ASCII VALUE
;SPECIAL CASES OF ASCII SPACE, "/" AND UN-USED ARE RE-ASSIGNED AS REQUIRED
;
READMORSE	MOVWF	R1		;TEMP STORAGE OF START POINTER
		SUBLW	020H		;TRAP FOR SPACE
		MOVLW	00AH		;PRE-INSERT SPACE
		BTFSC	STATUS,Z
		GOTO	READMORNW
		MOVFW	R1		;GET START POINT BACK
		SUBLW	02FH		;TRAP FOR "/"
		MOVLW	010H		;PRE-INSERT "/"
		BTFSC	STATUS,Z
		GOTO	READMORNW
		BTFSC	R1,6		;CHECK IF LETTER OR NUMBER/CONTROL
		BCF	R1,5		;ENSURE ALWAYS UPPER CASE ASCII ONLY IF LETTER
		MOVLW	030H
		SUBWF	R1,W		;CONVERT ASCII TO HEX ADDRESS
		BTFSS	STATUS,C	;CHECK IF CARRY, IE CHARACTER UN-USED LESS THAN 030H
		MOVLW	00AH		;USE SPACE LOCATION IF LOW CHARACTER
READMORNW	MOVWF	R1
		ADDWF	R1,W		;MULTIPLY BY 3 TO GET CORRECT START POINT IN TABLE
		ADDWF	R1,W
		MOVWF	R1
		CALL	READMORL
		MOVWF	MORSE1
		INCF	R1,F
		MOVFW	R1
		CALL	READMORL
		MOVWF	MORSE2
		INCF	R1,F
		MOVFW	R1
		CALL	READMORL
		MOVWF	MORSE3
		RETURN		
;
READMORL	NOP
		BANKSEL	EEADR		; Bank 2
		MOVWF 	EEADR 		; LS Byte of Program Address to read
		MOVLW 	HIGH MORSETAB	; MORSE STRINGS ALWAYS START AT MORSETAB STRING
		MOVWF 	EEADRH 		; MS Byte of Program Address to read
		BANKSEL	EECON1		; Bank 3
		BSF 	EECON1,EEPGD 	; Point to PROGRAM memory
		BSF 	EECON1,RD 	; EE Read
;
		NOP			; Any instructions here are ignored as program
		NOP 			; memory is read in second cycle after BSF EECON1,RD
;
		BANKSEL	EEDATA	 	; Bank 2
		MOVF 	EEDATA,W 	; W = LS Byte of Program EEDATA
		BANKSEL	PORTA		;BACK TO BANK 0
;
		RETURN
;
;******************************************************************************
;**************************** MORSE TABLE *************************************
;******************************************************************************
;
		ORG	00D00H		;START ADDRESS OF MORSE TABLE
;
;3 BYTES PER CHARACTER (24 BITS)
;OFFSET TO ALLOW DIRECT ASCII LOOKUP, IE MORSETAB 000H = ASCII 030H
;
MORSETAB	DE	B'11101110',B'11101110',B'11100000'	;MORSETAB 000H = ASCII 030H
		DE	B'10111011',B'10111011',B'10000000'	;1
		DE	B'10101110',B'11101110',B'00000000'	;2
		DE	B'10101011',B'11011100',B'00000000'	;3
		DE	B'10101010',B'11100000',B'00000000'	;4
		DE	B'10101010',B'10000000',B'00000000'	;5
		DE	B'11101010',B'10100000',B'00000000'	;6
		DE	B'11101110',B'10101000',B'00000000'	;7
		DE	B'11101110',B'11101010',B'00000000'	;8
		DE	B'11101110',B'11101110',B'10000000'	;9
		DE	B'00000000',B'00000000',B'00000000'	;MORSETAB 00AH = ASCII 03AH (RE-ASSIGNED TO SPACE ASCII 020H, SPECIAL CASE ALL 0'S) 
		DE	B'00000000',B'00000000',B'00000000'	;(ALL UN-USED LOCATIONS ARE DEFAULTED TO SPACE)
		DE	B'00000000',B'00000000',B'00000000'	;
		DE	B'00000000',B'00000000',B'00000000'	;
		DE	B'00000000',B'00000000',B'00000000'	;
		DE	B'00000000',B'00000000',B'00000000'	;
		DE	B'11101010',B'11101000',B'00000000'	;MORSETAB 010H = ASCII 040H (RE-ASSIGNED TO FORWARD SLASH / ASCII 02FH )
		DE	B'10111000',B'00000000',B'00000000'	;A = ASCII 041H
		DE	B'11101010',B'10000000',B'00000000'	;B
		DE	B'11101011',B'10100000',B'00000000'	;C
		DE	B'11101010',B'00000000',B'00000000'	;D
		DE	B'10000000',B'00000000',B'00000000'	;E
		DE	B'10101110',B'10000000',B'00000000'	;F
		DE	B'11101110',B'10000000',B'00000000'	;G
		DE	B'10101010',B'00000000',B'00000000'	;H
		DE	B'10100000',B'00000000',B'00000000'	;I
		DE	B'10111011',B'10111000',B'00000000'	;J
		DE	B'11101011',B'10000000',B'00000000'	;K
		DE	B'10111010',B'10000000',B'00000000'	;L
		DE	B'11101110',B'00000000',B'00000000'	;M
		DE	B'11101000',B'00000000',B'00000000'	;N
		DE	B'11101110',B'11100000',B'00000000'	;O
		DE	B'10111011',B'10100000',B'00000000'	;P
		DE	B'11101110',B'10111000',B'00000000'	;Q
		DE	B'10111010',B'00000000',B'00000000'	;R
		DE	B'10101000',B'00000000',B'00000000'	;S
		DE	B'11100000',B'00000000',B'00000000'	;T
		DE	B'10101110',B'00000000',B'00000000'	;U
		DE	B'10101011',B'10000000',B'00000000'	;V
		DE	B'10111011',B'10000000',B'00000000'	;W
		DE	B'11101010',B'11100000',B'00000000'	;X
		DE	B'11101011',B'10111000',B'00000000'	;Y
		DE	B'11101110',B'10100000',B'00000000'	;Z = ASCII 05AH
;
;
;******************************************************************************
;*************************** TEXT STRINGS *************************************
;******************************************************************************
;
		ORG	01D00H	 	;PAGE 1 START ADDRESS OF TEXT STRINGS (EACH PAGE 256 BYTES MAX)
;
TXTBOOT		DE	"** 122G_003 VK3CV / WQ1S **",000H
;
SERIAL		DE	" VERSION # ",VERSION,000H	;SEE START OF CODE FOR VERSION DEFINITION
;
CALLHEAD	DE	" BEACON = ",000H
;
DIAGHEAD	DE	" ER  TU  REFV EC VCOV DCIN ",000H
;
PLLERRT		DE	" PLL LOCK ERROR ",00DH,000H
;
LOWDCERRT	DE	" LOW DCin ERROR ",00DH,000H
;
NOERROR		DE	"                     ",000H
;
GPSSTRING	DE	008H,008H,008H,008H,"GPS",000H
;
COMPROMPT	DE	00DH,"                                ",00DH," COMMAND ? >_ ",000H
;
COMERROR	DE	007H,00DH," COMMAND ERROR ",000H
;
COMOK		DE	00DH,00AH," COMMAND OK ",000H
;
;
		ORG	01E00H		;PAGE 2 OF TEXT STRINGS
;
MBDHEAD		DE	" BEACON CARRIER DELAY = ",000H
;
ECHEAD		DE	" CHANNEL E DATA = ",000H
;
;******************************************************************************
;************************** EEPROM INITIALIZATION *****************************
;******************************************************************************
;
		ORG	2100H		;START OF EEPROM VALUES FOR SYNTH 
;
;ADF 4153 SYTH FREQUENCY DATA , RIGHT JUSTIFIED , defauls are shown in comments
;R3 SENT FIRST, MSB SENT FIRST
;
SYNTHINIT	DE	000H		;R3 000H LOWEST NOISE & SPUR MODE
		DE	003H		;003H
		DE	083H		;083H
;		
		DE	000H		;R2 000H PFD CURRENT 0.6mA 
		DE	01CH		;01CH	
		DE	0C2H		;0C2H POWER ON, REF DOUBLER
;
		DE	010H		;R1 010H DIVIDERS/OPT SELECTION
		DE	072H		;072H
		DE	001H		;001H
; 	
		DE	017H		;R0 017H 1914.06875 MHz x 64 = 122,500.4 MHz
		DE	0E3H		;0E3H
		DE	02CH		;02CH
;
;ADF4153 DISSABLE SYNTH FOR RESET
;
SYNTHDIS	DE	000H		;R3 000H LOWEST NOISE & SPUR MODE
		DE	003H		;003H
		DE	083H		;083H
;		
		DE	000H		;R2 000H PFD CURRENT 0.6mA 
		DE	01CH		;01CH	
		DE	0D2H		;0D2H POWER DOWN
;
		DE	010H		;R1 010H DIVIDERS/OPT SELECTION
		DE	072H		;072H
		DE	001H		;001H
; 	
		DE	017H		;R0 017H 1914.0625 MHz x 64 = 122,500.0 MHz
		DE	0E3H		;0E3H
		DE	02CH		;02CH
;
;
;CHANNEL FREQUENCY TABLE
;
FREQ0R		DE	010H		;R1 SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;R0 SYNTH FREQUENCY DATA RECEIVE (122.356 GHz)(PLL 1911.8125 MHz)
		DE	0DDH		;I.F. = 144.4 MHz
		DE	088H		
;
FREQ0T		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.5004 GHz)(PLL 1914.06875 MHz)
		DE	0E3H		
		DE	02CH
;
FREQ1R		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.5004 GHz)
		DE	0E3H		;I.F. = 144.4 MHz
		DE	02CH		
;
FREQ1T		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.356 GHz)
		DE	0DDH		
		DE	088H

FREQ2R		DE	010H		;SYNTH REF AND PFD FREQ
		DE	05DH
		DE	051H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.3942 GHz)(PLL 1912.409375 MHz)
		DE	0D2H		;I.F. = 144.1 MHz
		DE	030H		
;
FREQ2T		DE	010H		;SYNTH REF AND PFD FREQ
		DE	07BH
		DE	069H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.250100 GHz)(PLL 1910.1578125 MHz)
		DE	0DEH		
		DE	02CH
;
FREQ3R		DE	010H		;SYNTH REF AND PFD FREQ
		DE	07BH
		DE	069H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.250100 GHz)
		DE	0DEH		;I.F. = 144.1 MHz
		DE	02CH		
;
FREQ3T		DE	010H		;SYNTH REF AND PFD FREQ
		DE	05DH
		DE	051H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.3942 GHz)
		DE	0D2H
		DE	030H
;
FREQ4R		DE	010H		;SYNTH REF AND PFD FREQ
		DE	06CH
		DE	0DDH
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.39448 GHz)(PLL 1912.41375 MHz)
		DE	0DBH		;I.F. = 144.240 MHz
		DE	0D8H		
;
FREQ4T		DE	010H		;SYNTH REF AND PFD FREQ
		DE	047H
		DE	0D1H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.250240 GHz)(PLL 1910.160 MHz)
		DE	0C3H		
		DE	0F8H
;
FREQ5R		DE	010H		;SYNTH REF AND PFD FREQ
		DE	047H
		DE	0D1H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.250240 GHz)
		DE	0C3H		;I.F. = 144.240 MHz
		DE	0F8H		
;
FREQ5T		DE	010H		;SYNTH REF AND PFD FREQ
		DE	06CH
		DE	0DDH
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.39448 GHz)
		DE	0DBH
		DE	0D8H
;
FREQ6R		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.256 GHz)(PLL 1910.250 MHz)
		DE	0D9H		;I.F. = 144.000 MHz
		DE	0A0H		
;
FREQ6T		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.400 GHz)(PLL 1912.500 MHz)
		DE	0DFH		
		DE	040H
;
FREQ7R		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.400 GHz)
		DE	0DFH		;I.F. = 144.000 MHz
		DE	040H		
;
FREQ7T		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.256 GHz)
		DE	0D9H
		DE	0A0H
;
FREQ8R		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.356 GHz)(PLL 1911.8125 MHz)
		DE	0DDH		;I.F. = 144.4 MHz
		DE	088H		
;
FREQ8T		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.5004 GHz)(PLL 1914.06875 MHz)
		DE	0E3H		
		DE	02CH
;
FREQ9R		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.5004 GHz)
		DE	0E3H		;I.F. = 144.4 MHz
		DE	02CH		
;
FREQ9T		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.356 GHz)
		DE	0DDH		
		DE	088H
;
FREQAR		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.356 GHz)(PLL 1911.8125 MHz)
		DE	0DDH		;I.F. = 144.4 MHz
		DE	088H		
;
FREQAT		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.5004 GHz)(PLL 1914.06875 MHz)
		DE	0E3H		
		DE	02CH
;
FREQBR		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.5004 GHz)
		DE	0E3H		;I.F. = 144.4 MHz
		DE	02CH		
;
FREQBT		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.356 GHz)
		DE	0DDH		
		DE	088H
;
FREQCR		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.356 GHz)(PLL 1911.8125 MHz)
		DE	0DDH		;I.F. = 144.4 MHz
		DE	088H		
;
FREQCT		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.5004 GHz)(PLL 1914.06875 MHz)
		DE	0E3H		
		DE	02CH
;
FREQDR		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.5004 GHz)
		DE	0E3H		;I.F. = 144.4 MHz
		DE	02CH		
;
FREQDT		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.356 GHz)
		DE	0DDH		
		DE	088H
;
FREQER		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.356 GHz)(PLL 1911.8125 MHz)
		DE	0DDH		;I.F. = 144.4 MHz
		DE	088H		
;
FREQET		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.5004 GHz)(PLL 1914.06875 MHz)
		DE	0E3H		
		DE	02CH
;
FREQFR		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA RECEIVE (122.5004 GHz)
		DE	0E3H		;I.F. = 144.4 MHz
		DE	02CH		
;
FREQFT		DE	010H		;SYNTH REF AND PFD FREQ
		DE	072H
		DE	001H
		DE	017H		;SYNTH FREQUENCY DATA TRANSMIT (122.356 GHz)
		DE	0DDH		
		DE	088H
;
;
;******************************************************************************
;************************** EEPROM OPTION BYTES *******************************
;******************************************************************************
;
		ORG	021E0H				;START OF EEPROM DATA STORAGE
;
ERTUNEL		DE	008H				;(008H NOMINAL) REFERENCE TUNE VALUE (10 BITS ARE AVAILABLE, PWM7 - PWM0 HERE AND UPPER IN ERTUNEH)
;
ERTUNEH		DE	00EH				;(00EH NOMINAL) 0, 0, 0, STEER3, STEER2, STEER1, PWM9, PWM8
;
EWPM		DE	001H,0FAH			;MORSE CW BEACON WPM (01FA = APPROX 15 WPM)
;
ECARDEL		DE	CARRIER_DELAY		;MORSE BEACON CARRIER DELAY IN SECONDS
;
		ORG	21E6H				;MORSE BEACON STRING EEPROM START ADDRESS
;
IDENTMORSE	DE	"de W7GLF/B",000H	;MORSE BEACON IDENT (UPPER OR LOWER CASE, 23 CHARACTER MAX)
;							;LETTERS, NUMBERS, SPACES AND / ONLY.
		ORG	21FFH		
;		
		DE	000H				;FORCE END OF MORSE TABLE ALWAYS TO 000H TO END 
;
		END	;(BON-E-HOH)

